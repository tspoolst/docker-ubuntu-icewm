#!/bin/bash

#[of]:functions
function fn_buildLayer {
  typeset lc_layer
  lc_layer=layer$1
  if ${gl_rebuildflag} || ! shasum -s -c Dockerfile.sh1 ; then
    gl_rebuildflag=true
    docker build -t tspoolst/docker-ubuntu-icewm:${lc_layer}-0.2.0 . && shasum Dockerfile > Dockerfile.sh1 || exit 1
  elif docker images -q tspoolst/docker-ubuntu-icewm:${lc_layer}-0.2.0 | grep -q . ; then
    docker pull tspoolst/docker-ubuntu-icewm:${lc_layer}-0.2.0 || exit 1
  fi
}
#[cf]

#[of]:setup vars
typeset lc_path
lc_path=$(cd ${0%/*};pwd)
#[cf]
#[of]:main

cd ${lc_path}

#[of]:parse command line
gl_layer="$1"
while ! [[ "${gl_layer}" =~ [234] ]] ; do
  read -n 1 -p "select layer to build through to [2/3/4] " gl_layer
  echo
done
#[cf]

#XQuartz defaults
#"app_to_run" = "/opt/X11/bin/xterm";
#"fullscreen_menu" = 1;
#"nolisten_tcp" = 1;
#"option_sends_alt" = 0;
#rootless = 1;
#"wm_click_through" = 0;
#"wm_ffm" = 0;

gl_rebuildflag=false

#[of]:build through to layer 1
cd layer1-base
fn_buildLayer 1
cd ${lc_path}
#[cf]

#[of]:build through to layer 2 - terminal only apps
if (( gl_layer >= 2 )) ; then
  cd layer2-commandline
  fn_buildLayer 2
  cd ${lc_path}
fi
#[cf]
#[of]:build through to layer 3 - adds X apps
if (( gl_layer >= 3 )) ; then
  cd layer3-xconnect
  fn_buildLayer 3
  cd ${lc_path}
fi
#[cf]
#[of]:configure XQuartz for windowed mode if layer3 or less
[[ "$(uname -s)" == "Darwin" ]] && if (( gl_layer <= 3 )) ; then
#[of]:  configure options for windowed mode
  #XQuartz windowed
  defaults write org.macosforge.xquartz.X11 "app_to_run" "/bin/true"
  defaults write org.macosforge.xquartz.X11 rootless -int 1
  defaults write org.macosforge.xquartz.X11 "fullscreen_menu" -int 1
  defaults write org.macosforge.xquartz.X11 "nolisten_tcp" -int 0
  defaults write org.macosforge.xquartz.X11 "option_sends_alt" -int 1
  defaults write org.macosforge.xquartz.X11 "sync_pasteboard" -int 0
  defaults write org.macosforge.xquartz.X11 "wm_click_through" -int 0
  defaults write org.macosforge.xquartz.X11 "wm_ffm" -int 0
#[cf]
#[of]:  remove desktop manager startup scripts
  rm -f ~/.xinitrc.d/99-wm.sh
#[cf]
fi
#[cf]
#[of]:build through to layer 4 - the desktop manager
if (( gl_layer >= 4 )) ; then
  cd layer4-desktop
  fn_buildLayer 4
  cd ${lc_path}
#[of]:  configure XQuartz for fullscreen mode if layer4
  [[ "$(uname -s)" == "Darwin" ]] && if (( gl_layer == 4 )) ; then
#[of]:    configure options for fullscreen
  #XQuartz fullscreen with desktop manager
  defaults write org.macosforge.xquartz.X11 "app_to_run" "/bin/true"
  defaults write org.macosforge.xquartz.X11 rootless -int 0
  defaults write org.macosforge.xquartz.X11 "fullscreen_menu" -int 0
  defaults write org.macosforge.xquartz.X11 "nolisten_tcp" -int 0
  defaults write org.macosforge.xquartz.X11 "option_sends_alt" -int 1
  defaults write org.macosforge.xquartz.X11 "sync_pasteboard" -int 0
  defaults write org.macosforge.xquartz.X11 "wm_click_through" -int 0
  defaults write org.macosforge.xquartz.X11 "wm_ffm" -int 0
#[cf]
#[of]:    add XQuartz desktop manager startup scripts
  mkdir -p ~/.xinitrc.d
  cp -af 99-wm.sh ~/.xinitrc.d/99-wm.sh
  chmod 755 ~/.xinitrc.d/99-wm.sh
#[cf]
  fi
#[cf]
fi
#[cf]

if [[ "$(uname -s)" == "Darwin" ]] ; then
  _options[${#_options[@]}]="-e DISPLAY=docker.for.mac.localhost:0"
else
  _options[${#_options[@]}]="-v /tmp/.X11-unix:/tmp/.X11-unix"
  _options[${#_options[@]}]="-e DISPLAY=:0"
fi

#[of]:recreate workbench container
docker ps -a | tail -n +2 | grep -q workbench && {
  docker stop workbench
  docker rm workbench
}
docker run \
  -v ${HOME}/projects:/projects \
  -v ${HOME}/.ssh:/root/.ssh \
  -v ${HOME}/.vagrant.d/boxes:/root/.vagrant.d/boxes \
  -v /var/run/docker.sock:/var/run/docker.sock \
  ${_options[@]} \
  -d \
  --restart always \
  --name workbench \
  -l workbench \
  -h workbench \
  --privileged \
  tspoolst/docker-ubuntu-icewm:layer${gl_layer}-0.2.0
#[cf]
#[of]:if layer3 or higher handle XQuartz restart
[[ "$(uname -s)" == "Darwin" ]] && if (( gl_layer >= 3 )) ; then
#[of]:  force restart XQuartz
  killall Xquartz
  open /Applications/Utilities/XQuartz.app
#[cf]
#[of]:  add perms to run local x apps via tcp socket
  xhost + localhost
#[cf]
fi
#[cf]
#[of]:exec into workbench bash shell
docker exec -ti workbench /bin/bash -l
#[cf]
#[cf]
# vim:number:tabstop=2:shiftwidth=2:autoindent:foldmethod=marker:foldlevel=0:foldmarker=#[of],#[cf]
